import {
  __commonJS
} from "./chunk-YHHEEY6D.js";

// node_modules/vue-top-progress/dist/vue-top-progress.min.js
var require_vue_top_progress_min = __commonJS({
  "node_modules/vue-top-progress/dist/vue-top-progress.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.vueTopProgress = e();
    }(exports, function() {
      "use strict";
      function t(t2, e2, s2) {
        return t2 < e2 ? e2 : t2 > s2 ? s2 : t2;
      }
      var e = /* @__PURE__ */ function() {
        function t2() {
          var s2 = e2.shift();
          s2 && s2(t2);
        }
        var e2 = [];
        return function(s2) {
          e2.push(s2), 1 === e2.length && t2();
        };
      }(), s = { render: function() {
        var t2 = this, e2 = t2.$createElement, s2 = t2._self._c || e2;
        return s2("transition", { attrs: { css: false }, on: { "before-enter": t2.beforeEnter, enter: t2.enter, "after-enter": t2.afterEnter } }, [t2.show ? s2("div", { staticClass: "top-progress", style: t2.barStyle }, [s2("div", { staticClass: "peg", style: t2.pegStyle })]) : t2._e()]);
      }, staticRenderFns: [], name: "vueTopprogress", data: function() {
        return { error: false, show: false, progress: 0, opacity: 1, status: null, isPaused: false };
      }, props: { speed: { type: Number, default: 350 }, color: { type: String, default: "#29d" }, colorShadow: String, errorColor: { type: String, default: "#f44336" }, trickle: { type: Boolean, default: true }, trickleSpeed: { type: Number, default: 250 }, easing: { type: String, default: "linear" }, height: { type: Number, default: 3 }, minimum: { type: Number, default: 0.8 }, maximum: { type: Number, default: 97.5 }, zIndex: { type: Number, default: 9999 } }, computed: { progressColor: function() {
        return this.error ? this.errorColor : this.color;
      }, isStarted: function() {
        return "number" == typeof this.status;
      }, boxShadow: function() {
        return this.colorShadow || this.progressColor;
      }, barStyle: function() {
        return { position: "fixed", top: "0", left: "0", right: "0", width: this.progress + "%", height: this.height + "px", backgroundColor: this.progressColor, transition: "all " + this.speed + "ms " + this.easing, opacity: "" + this.opacity, zIndex: "" + this.zIndex };
      }, pegStyle: function() {
        return { display: "block", position: "absolute", right: "0", width: "100px", height: "100%", opacity: this.progress ? "1" : "0", boxShadow: "0 0 10px " + this.boxShadow + ", 0 0 5px " + this.boxShadow, transform: "rotate(3deg) translate(0px, -4px)" };
      } }, methods: { beforeEnter: function(t2) {
        this.opacity = 0, this.progress = 0, this.width = 0;
      }, enter: function(t2, e2) {
        this.opacity = 1, e2();
      }, afterEnter: function(t2) {
        this._runStart();
      }, _work: function() {
        var t2 = this;
        setTimeout(function() {
          t2.isStarted && !t2.isPaused && (t2.increase(), t2._work());
        }, this.trickleSpeed);
      }, _runStart: function() {
        this.status = 100 === this.progress ? null : this.progress, this.trickle && this._work();
      }, start: function() {
        this.isPaused = false, this.show ? this._runStart() : this.show = true;
      }, set: function(s2) {
        var r2 = this;
        this.isPaused = false;
        var i = void 0;
        i = this.isStarted ? s2 < this.progress ? t(s2, 0, 100) : t(s2, this.minimum, 100) : 0, this.status = 100 === i ? null : i, e(function(t2) {
          r2.progress = i, 100 === i ? setTimeout(function() {
            r2.opacity = 0, setTimeout(function() {
              r2.show = false, r2.error = false, t2();
            }, r2.speed);
          }, r2.speed) : setTimeout(t2, r2.speed);
        });
      }, increase: function(e2) {
        var s2 = this.progress;
        s2 < 100 && "number" != typeof e2 && (e2 = s2 >= 0 && s2 < 25 ? 3 * Math.random() + 3 : s2 >= 25 && s2 < 50 ? 3 * Math.random() : s2 >= 50 && s2 < 85 ? 2 * Math.random() : s2 >= 85 && s2 < 99 ? 0.5 : 0), this.set(t(s2 + e2, 0, this.maximum));
      }, decrease: function(t2) {
        0 !== this.progress && this.increase(-t2);
      }, done: function() {
        this.set(100);
      }, getProgress: function() {
        return this.status ? this.progress : 0;
      }, pause: function() {
        this.isPaused = true;
      }, fail: function() {
        this.error = true, this.done();
      } } }, r = function t2(e2) {
        t2.installed || e2.component(s.name, s);
      };
      return "undefined" != typeof window && window.Vue && r(window.Vue), { vueTopprogress: s, install: r };
    });
  }
});
export default require_vue_top_progress_min();
//# sourceMappingURL=vue-top-progress.js.map
